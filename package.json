{
  "name": "go-hello-world",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "prepare": "npm run setup:air && npm run vscode:settings && npm run env:copy && npm run graphql:generate",
    "postinstall": "go mod download",
    "build": "rm -rf ./build; npm run graphql:generate && go build -o ./build/main ./src/main.go",
    "build:docker": "npm run docker:build",
    "docker:build": "docker build . -f ./dockerfile -t test/go_hello_world",
    "docker:build-no-cache": "docker build . -f ./dockerfile -t test/go_hello_world --no-cache",
    "docker:save": "docker save -o ./docker_image.tar test/go_hello_world",
    "docker:scan": "docker scan test/go_hello_world",
    "env:copy": "[ ! -f ./.env ] && cp ./.env.example ./.env || echo \"ENV ALREADY SETUP\"",
    "start": "./bin/air",
    "start:prod": "./build/main",
    "start:compose": "docker-compose -f ./docker-compose.yml up -d --force-recreate --build",
    "test": "echo \"Error: no test specified\" && exit 1",
    "graphql:generate": "go generate ./src/...",
    "vscode:settings": "[ ! -f ./.vscode/settings.json ] && cp ./.vscode/settings.example.json ./.vscode/settings.json || echo \"VSCODE SETTINGS ALREADY SETUP\"",
    "openssl:generate-private-key": "openssl genrsa -out ./jwt_key.example 4096",
    "openssl:generate-public-key": "openssl rsa -in ./jwt_key.example -pubout -out ./jwt_key.example.pub",
    "openssl:generate": "npm run openssl:generate-private-key",
    "setup:air": "[ ! -f ./bin/air ] && curl -sSfL https://raw.githubusercontent.com/cosmtrek/air/master/install.sh | sh -s || echo \"AIR ALREADY SETUP\""
  },
  "keywords": [],
  "author": "",
  "license": "ISC"
}
